#!/bin/bash

LOCALBASHRC=$HOME/.local.sh
if [ -e $LOCALBASHRC ]; then
    source $LOCALBASHRC
fi


if [[ "$OSTYPE" == "linux-gnu" ]]; then
    export JAVA_HOME=/usr/lib/jvm/default-java
elif [[ "$OSTYPE" == darwin* ]]; then
    export JAVA_HOME=/Library/Java/JavaVirtualMachines/jdk1.8.0_112.jdk/Contents/Home
    # Some shortcuts
    alias core="cd /Users/core/workspace"
    alias home="cd /Users/home"
    #Node
    export NODE_PATH=/Users/home/:$HOME/workspace:$JS

    #Cuda
    export CUDA_ROOT=/usr/local/cuda

    #Haskell stack
    export PATH=$HOME/.local/bin:$PATH

    #gcloud
    export PATH=$HOME/Tools/google-cloud-sdk/bin:$PATH

    #Kubernetes completion - failing ATM
    #source <(kubectl completion bash)
fi

export EDITOR="emacs -nw"
export PAGER=less
export CVS_RSH=ssh


source $HOME/.color
source $HOME/scripts/git-completion.bash

export PATH=$HOME/bin:$HOME/scripts:/usr/bin:$M2:/usr/local/bin:/usr/local/mysql/bin:$PATH:/usr/sbin:/usr/afsws/bin:/usr/afsws/etc
export PATH=/usr/local/cuda/bin:/usr/local/bin:/opt/local/bin:/opt/local/sbin:$DERBY_INSTALL/bin:$HOME/Software/shell-scripts/dvcs:$PATH
export PATH=$HOME/.cask/bin:$PATH
export PATH=$HOME/Tools/sqlplus:$PATH
export PATH=$HOME/Library/Haskell/bin:$PATH
export PATH=$HOME/.local/bin:$PATH
export DYLD_LIBRARY_PATH=/Developer/NVIDIA/CUDA-7.0/lib:$HOME/Tools/sqlplus$DYLD_LIBRARY_PATH

export HISTSIZE=
export HISTFILESIZE=
export HISTFILE=$HOME/.history/myhist

export MAVEN3_HOME=/opt/local/share/java/maven3
export M3=$MAVEN3_HOME/bin

export GOPATH=/Users/home/go/gocode
export GOOS="darwin"
export GOARCH="amd64"


HOSTNAME="$(hostname)"
HOSTNAME_SHORT="${HOSTNAME%%.*}"


ssh-add -K 2>/dev/null;
#Turn on flow control so forward history search works
stty -ixon

#For macs sake
update_terminal_cwd() {
    # Identify the directory using a "file:" scheme URL,
    # including the host name to disambiguate local vs.
    # remote connections. Percent-escape spaces.
    local SEARCH=' '
    local REPLACE='%20'
    local PWD_URL="file://$HOSTNAME${PWD//$SEARCH/$REPLACE}"
    printf '\e]7;%s\a' "$PWD_URL"
}


#Agressively append and update the history so history is shared across shell sessions.
if [ -z $INSIDE_EMACS ]; then
    #Not inside emacs shell
    export PROMPT_COMMAND="update_terminal_cwd; history -a; history -c; history -r; $PROMPT_COMMAND"
else
    export PROMPT_COMMAND="history -a; history -c; history -r"
fi

shopt -s histappend





function gpersonal() {
    #Git
    git config user.name "Seth Lakowske"
    git config user.email lakowske@gmail.com
}

function gchk() {
    git checkout `git branch -a | sed -e 's/\(.*\/\)//g' | grep $1 | head -n 1`
}

function gbr() {
    git branch -a | sed -e 's/\(.*\/\)//g' | grep $1
}

function gcma() {
    git commit -am "$1"
}

function gp() {
    git push
}

function gs() {
    git status
}

function gd() {
    git diff
}

function jshell(){
    docker run --rm=true -it -v /Users/home/java/dacon/build/libs:/tmp/context openjdk:9 /usr/bin/jshell -classpath "/tmp/context/*"
}

export PS1="\t/\u/\H\w> "

#THIS MUST BE AT THE END OF THE FILE FOR SDKMAN TO WORK!!!
export SDKMAN_DIR="/home/seth/.sdkman"
[[ -s "/home/seth/.sdkman/bin/sdkman-init.sh" ]] && source "/home/seth/.sdkman/bin/sdkman-init.sh"

complete -C /Users/core/workspace/vault/vault vault

function minikube_reset_vbox_dhcp_leases() {
  # # Reset Virtualbox DHCP Lease Info

  kill -9 $(ps aux |grep -i "vboxsvc\|vboxnetdhcp" | awk '{print $2}') 2>/dev/null

  if [[ -f ~/Library/VirtualBox/HostInterfaceNetworking-vboxnet0-Dhcpd.leases ]] ; then
    rm  ~/Library/VirtualBox/HostInterfaceNetworking-vboxnet0-Dhcpd.leases
  fi
}
